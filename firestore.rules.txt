// Firestore Security Rules â€” Bayside
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /users/{uid} {
      allow read: if isSignedIn() && (uid == request.auth.uid || isAdmin());
      allow create: if isSignedIn() && uid == request.auth.uid && !('role' in request.resource.data.keys());
      allow update: if isSignedIn() && uid == request.auth.uid &&
                    (!('role' in request.resource.data.keys()) ||
                      request.resource.data.role == resource.data.role);
      allow write: if isAdmin();
    }
    match /assignments/{id} {
      allow read: if isSignedIn() &&
        (resource.data.assigneeUid == request.auth.uid || isAdmin());
      allow create, delete: if isAdmin();
      allow update: if isAdmin() ||
        (isSignedIn() && request.auth.uid == resource.data.assigneeUid &&
          request.resource.data.diff(resource.data).changedKeys().hasOnly(['status']));
    }
  }
}
